name: Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: CI
    runs-on: self-hosted

    container:
      image: ghcr.io/loskana/larpmanager-ci:latest

      credentials:
        username: loskana
        password: ${{ secrets.REPO_TOKEN }}

    env:
      CI: true
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "5432"
      POSTGRES_USER: larpmanager
      POSTGRES_PASSWORD: larpmanager
      POSTGRES_DB: larpmanager_test
      WORKERS: "4"

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: larpmanager
          POSTGRES_PASSWORD: larpmanager
          POSTGRES_DB: larpmanager
          POSTGRES_OPTS: "-c fsync=off -c full_page_writes=off -c synchronous_commit=off"
        options: >-
          --health-cmd "pg_isready -U test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Git LFS
      run: |
        git config --global --add safe.directory /__w/larpmanager/larpmanager
        git lfs pull

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt -q
        cd larpmanager/static
        npm install
        cd ../../

    - name: Copy media fixtures
      run: |
        mkdir -p ../media/
        cp -r larpmanager/tests/media/* ../media/
        ls -al ../media/

    - name: Prepare statics
      run: |
        python manage.py compilemessages
        python manage.py collectstatic --noinput
        python manage.py compress

    - name: Prepare dbs
      run: |
        bash scripts/create_dbs.sh "$WORKERS" larpmanager/tests/test_db.sql

    - name: Run Django tests
      run: |
        export PYTEST_CURRENT_TEST="true"
        export HOME=$(mktemp -d)
        pytest -n "$WORKERS" --reruns 5 --reruns-delay 2 --reuse-db --no-migrations

    - name: Upload Artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-artifacts
        path: |
          artifacts/playwright/**/*.zip
          artifacts/playwright/**/*.png
        if-no-files-found: ignore
  deploy:
    name: CD
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.base_ref == ''
    steps:

    - uses: actions/checkout@v3

    - name: Deploy via SSH
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: ${{ secrets.DEPLOY_SCRIPT }}
