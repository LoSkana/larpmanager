# Generated by Django 5.2.3 on 2025-08-19 07:51

import datetime

import django.db.models.deletion
import model_clone.mixin
from django.db import migrations, models

import larpmanager.models.utils


class Migration(migrations.Migration):
    dependencies = [
        ("larpmanager", "0059_alter_character_text_alter_discount_typ_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="LarpManagerTicket",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("deleted", models.DateTimeField(db_index=True, editable=False, null=True)),
                ("deleted_by_cascade", models.BooleanField(default=False, editable=False)),
                ("created", models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("reason", models.CharField(max_length=100, null=True)),
                ("email", models.EmailField(help_text="How can we contact you", max_length=254, null=True)),
                (
                    "content",
                    models.CharField(help_text="Describe how we can help you", max_length=1000, verbose_name="Request"),
                ),
                (
                    "screenshot",
                    models.ImageField(
                        help_text="Optional - A screenshot of the error / bug / problem",
                        null=True,
                        blank=True,
                        max_length=500,
                        upload_to=larpmanager.models.utils.UploadToPathAndRename("tickets/"),
                        verbose_name="Screenshot",
                    ),
                ),
                ("assoc", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="larpmanager.association")),
                (
                    "member",
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="larpmanager.member"),
                ),
            ],
            options={
                "ordering": ["-updated"],
                "abstract": False,
            },
            bases=(model_clone.mixin.CloneMixin, models.Model),
        ),
    ]
